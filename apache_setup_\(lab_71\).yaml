#LAB 7-1
#Write a playbook that meets the following requirements. Use multiple plays in a way that makes sense.
#
#• Write a first play that installs the httpd and mod_ssl packages on host ansible2.
#• Use variable inclusion to define the package names in a separate file.
#• Use a conditional to loop over the list of packages to be installed.
#• Install the packages only if the current operating system is CentOS or RedHat (but not Fedora) version 8.0 or later. If that is not the case, the playbook should fail with the error message “Host hostname does not meet minimal requirements,” where hostname is replaced with the current host name.
#• On the Ansible control host, create a file /tmp/index.html. This file must have the contents “welcome to my webserver”.
#• If the file /tmp/index.html is successfully copied to /var/www/html, the web server process must be restarted. If copying the package fails, the playbook should show an error message.
#• The firewall must be opened for the http as well as the https services.

---
- name: install httpd and mod-ssl on ansible2
  vars_files: vars/ansible2_pkgs
  hosts: ansible2
  tasks:
  - name: install httpd and mod-ssl on ansible2 if node meets min reqs
    yum:
      state: installed
      name: "{{ item }}"
    loop: "{{ packages }}"
    when: ( ansible_facts['distribution'] == "RedHat" and ansible_facts['distribution_version']|float >= 8.0 ) or ( ansible_facts['distribution'] == "CentOS" and ansible_facts['distribution_version']|float >= 8.0 )
  
  - name: Fail if node does not meet minimum reqs
    fail:
      msg: "{{ ansible_facts['hostname'] }} does not meet minimum requirements."
    when: ( ansible_facts['distribution'] != "RedHat" ) or ( ansible_facts['distribution_version']|float <= 7.9 )

  - name: copy index.html to "{{ ansible_facts['hostname']}}"
    copy:
      src: /tmp/index.html
      dest: /var/www/html/
      owner: apache
      mode: 0755
    ignore_errors: yes
    register: copy_task
    notify: restart_httpd
    
  - name: Print failure message if copy task fails.
    debug:
      msg: Copy /tmp/index.html to "{{ ansible_facts['hostname'] }}" has failed
    ignore_errors: yes
    when: copy_task.failed == "true"

  - name: Open firewall for http & https
    firewalld:
      state: enabled
      immediate: yes
      permanent: yes
      service: "{{ item }}"
    loop:
    - http
    - https
  
  handlers:
  - name: restart_httpd
    service:
      name: httpd
      state: restarted
